<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookstore.backend.dao.OrderListDao">
    <select id="getOrdersByUserId" parameterType="String" resultType="OrderList">
        select * from order_list where user_id = #{userId}
    </select>

    <select id="getOrdersByUserIdAndDate" resultType="OrderList">
        select * from order_list where user_id = #{userId} and date &gt;= #{start} and date &lt;= #{end}
    </select>

    <select id="getOrdersByOrderId" parameterType="String" resultType="OrderList">
        select * from order_list where order_id = #{orderId}
    </select>

    <insert id="addOrder" parameterType="OrderList">
        insert into order_list values (#{order_id}, #{book_id}, #{user_id}, #{date}, #{quantity})
    </insert>

    <insert id="addOrders">
        insert into order_list values
        <foreach collection="orderList" index="index" item="item" open="" separator="," close="">
            (#{item.order_id, jdbcType=VARCHAR}, #{item.book_id, jdbcType=VARCHAR}, #{item.user_id, jdbcType=VARCHAR}, #{item.date, jdbcType=BIGINT}, #{item.quantity, jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="deleteOrder">
        delete from order_list where order_id = #{orderId} and book_id = #{bookId}
    </delete>

    <delete id="deleteOrdersByOrderId" parameterType="String">
        delete from order_list where order_id = #{orderId}
    </delete>

    <update id="modifyQuantity">
        update order_list set quantity = #{newQuantity} where order_id = #{orderId} and book_id = #{bookId}
    </update>

    <select id="getTotalPrice" resultType="double">
        select sum(price * quantity) from (
            select price, quantity from (
	            select * from order_list where order_id = #{orderId}
            ) as temp natural join book
        ) as price_quantity
    </select>

    <select id="getTotalQuantity" resultType="int">
        select sum(quantity) from (select quantity from order_list where order_id = #{orderId}) as temp
    </select>
</mapper>